---
- name: Get gitea version
  shell: |
    curl -s https://dl.gitea.com/gitea/version.json | jq -r '.latest.version'
  register: gitea_latest_version

- name: Download latest Gitea version
  get_url:
    url: https://dl.gitea.com/gitea/{{gitea_latest_version.stdout}}/gitea-{{gitea_latest_version.stdout}}-linux-amd64
    dest: /usr/local/bin/gitea
    mode: 0755
    force: true

- name: Create git user
  user:
    name: git
    shell: /bin/bash
    password: '!'
    create_home: true
    home: /home/git

- name: Create config and data folders
  file:
    path: "/etc/gitea"
    state: directory
    owner: root
    group: git
    mode: 0750

- name: Create /var/lib/gitea folders
  file:
    path: "{{item}}"
    state: directory
    owner: git
    group: git
    mode: 0750
  loop:
    - /var/lib/gitea/custom
    - /var/lib/gitea/data
    - /var/lib/gitea/log

- name: Create /etc/gitea folders
  file:
    path: "/etc/gitea"
    state: directory
    owner: root
    group: git
    mode: 0770

- name: Render gitea settings
  template:
    src: templates/app.ini.j2
    dest: "/etc/gitea/app.ini"

- name: Create certificate symlinks
  file:
    src: /etc/letsencrypt/live/{{ GITEA_DOMAIN }}/fullchain.pem
    dest: /etc/gitea/cert.pem
    owner: git
    group: git
    state: link

- name: Create private key symlinks
  file:
    src: /etc/letsencrypt/live/{{ GITEA_DOMAIN }}/privkey.pem
    dest: /etc/gitea/privkey.pem
    owner: git
    group: git
    state: link
  
- name: "Setup systemd service"
  ansible.builtin.template:
    src: gitea.service.j2
    dest: /lib/systemd/system/gitea.service
    owner: root
    group: root
    mode: 0644
  notify:
    - "Reload systemd"
    - "Restart gitea"

# systemd to be reloaded the first time because
#  it is the only way Systemd is going to be aware of the new unit file.
- name: "Reload systemd"
  ansible.builtin.systemd:
    daemon_reload: true

- name: "Restart gitea"
  ansible.builtin.service:
    name: gitea
    state: restarted

- name: Identify gitea users
  ansible.builtin.command: su - git -c '/usr/local/bin/gitea -c /etc/gitea/app.ini admin user list'
  become: true
  register: _giteausers
  changed_when: false

- name: Use gitea cli to create user
  become: true
  ansible.builtin.command: |
    su - git -c \
    '/usr/local/bin/gitea -c /etc/gitea/app.ini \
    admin user create --username "{{ item.name }}" \
    --password "{{ item.password }}" --email "{{ item.email }}" \
    --must-change-password={{ item.must_change_password }} --admin={{ item.admin }}'
  register: _gitearesult
  failed_when:
    - '"successfully created" not in _gitearesult.stdout'
  changed_when:
    - '"successfully created!" in _gitearesult.stdout'
  when: "_giteausers is defined and item.name not in _giteausers.stdout and item.state | default('present') == 'present'"
  loop: "{{ gitea_users }}"

- name: Use gitea cli to delete user
  become: true
  ansible.builtin.command: |
    su - git -c \
    '/usr/local/bin/gitea -c /etc/gitea/app.ini \
    admin user delete --username "{{ item.name }}"'
  register: _giteadelresult
  failed_when:
    - '"error" in _giteadelresult.stdout'
  changed_when:
    "_giteausers is defined and item.name in _giteausers.stdout"
  when: "_giteausers is defined and item.name in _giteausers.stdout and item.state | default('present') == 'absent'"
  loop: "{{ gitea_users }}"